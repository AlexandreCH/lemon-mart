{
  "name": "lemon-mart",
  "version": "8.0.0",
  "license": "MIT",
  "config": {
    "imageRepo": "090999229429.dkr.ecr.us-east-1.amazonaws.com/lemon-mart",
    "imageName": "lemon-mart",
    "imagePort": "8080",
    "internalContainerPort": "80",
    "awsRegion": "us-east-1",
    "awsEcsCluster": "fargate-cluster",
    "awsService": "lemon-mart-service"
  },
  "engines": {
    "node": "10.15",
    "npm": "6.0.1"
  },
  "scripts": {
    "ng": "ng",
    "standardize": "import-sort --write \"**/*.ts\" && prettier --write \"**/*.ts\" && js-beautify \"src/**/*.html\"",
    "start": "npm run standardize && ng serve --port 5000",
    "build": "npm run standardize && ng build",
    "test": "ng test --browsers Chrome",
    "test:debug": "ng test --browsers Chrome --sourcemaps",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "build:prod": "ng build --prod",
    "build:integration": "cross-conf-env docker build -f integration.Dockerfile . -t $npm_package_config_imageRepo:latest --build-arg CACHEBUST=$(date +%s)",
    "premock:start": "npm run build:prod",
    "mock:standalone": "docker run -p 3000:3000 -t duluca/lemon-mart-swagger-server",
    "mock:start": "docker-compose up",
    "mock:stop": "docker-compose down",
    "test:prod": "ng test --browsers ChromiumNoSandbox --watch=false",
    "test:prod:e2e": "npm run e2e",
    "test:coverage": "ng test --browsers ChromiumNoSandbox --watch=false --code-coverage",
    "posttest:coverage": "http-server -c-1 -o -p 9875 ./coverage",
    "predocker:build": "npm run build:prod && npm run test:prod",
    "docker:build": "cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:build": "npm run docker:tag",
    "docker:tag": " cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest",
    "docker:run": "run-s -c docker:clean docker:runHelper",
    "docker:runHelper": "cross-conf-env docker run -e NODE_ENV=local --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:$npm_package_config_internalContainerPort $npm_package_config_imageRepo",
    "predocker:publish": "echo Attention! Ensure `docker login` is correct.",
    "docker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version",
    "postdocker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:latest",
    "docker:clean": "cross-conf-env docker rm -f $npm_package_config_imageName",
    "predocker:taillogs": "echo Web Server Logs:",
    "docker:taillogs": "cross-conf-env docker logs -f $npm_package_config_imageName",
    "docker:open:win": "echo Trying to launch on Windows && timeout 2 && start http://localhost:%npm_package_config_imagePort%",
    "docker:open:mac": "echo Trying to launch on MacOS && sleep 2 && URL=http://localhost:$npm_package_config_imagePort && open $URL",
    "docker:debugmessage": "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
    "predocker:debug": "run-s -c docker:build docker:run",
    "docker:debug": "run-s -cs docker:open:win docker:open:mac docker:debugmessage docker:taillogs",
    "aws:login:win": "cross-conf-env aws ecr get-login --no-include-email --region $npm_package_config_awsRegion > dockerLogin.cmd && call dockerLogin.cmd && del dockerLogin.cmd",
    "aws:login:mac": "eval $(aws ecr get-login --no-include-email --region $npm_package_config_awsRegion)",
    "aws:login": "run-p -cs aws:login:win aws:login:mac",
    "aws:deploy": "cross-conf-env docker run --env-file ./.env duluca/ecs-deploy-fargate -c $npm_package_config_awsEcsCluster -n $npm_package_config_awsService -i $npm_package_config_imageRepo:latest -r $npm_package_config_awsRegion --timeout 1000",
    "aws:release": "run-s -cs aws:login docker:publish aws:deploy",
    "aws:fargate-release": "run-s -cs aws:login docker:publish"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "8.0.0-beta.11",
    "@angular/cdk": "8.0.0-beta.1",
    "@angular/common": "8.0.0-beta.11",
    "@angular/compiler": "8.0.0-beta.11",
    "@angular/core": "8.0.0-beta.11",
    "@angular/flex-layout": "^7.0.0-beta.24",
    "@angular/forms": "8.0.0-beta.11",
    "@angular/http": "8.0.0-beta.10",
    "@angular/material": "8.0.0-beta.1",
    "@angular/platform-browser": "8.0.0-beta.11",
    "@angular/platform-browser-dynamic": "8.0.0-beta.11",
    "@angular/router": "8.0.0-beta.11",
    "core-js": "^2.5.4",
    "fake-jwt-sign": "^1.1.0",
    "hammerjs": "^2.0.8",
    "jwt-decode": "^2.2.0",
    "rxjs": "6.4.0",
    "ts-enum-util": "^4.0.0",
    "zone.js": "0.9.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.800.0-beta.11",
    "@angular/cli": "8.0.0-beta.11",
    "@angular/compiler-cli": "8.0.0-beta.11",
    "@angular/language-service": "8.0.0-beta.11",
    "@types/jasmine": "~3.3.12",
    "@types/jasminewd2": "~2.0.6",
    "@types/jsonwebtoken": "^8.3.2",
    "@types/jwt-decode": "^2.2.1",
    "@types/node": "^11.13.4",
    "codelyzer": "^5.0.0",
    "cross-conf-env": "^1.1.2",
    "dev-norms": "^1.7.0",
    "http-server": "^0.11.1",
    "import-sort": "^6.0.0",
    "import-sort-cli": "^6.0.0",
    "import-sort-parser-typescript": "^6.0.0",
    "import-sort-style-module": "^6.0.0",
    "jasmine": "^3.4.0",
    "jasmine-core": "~3.4.0",
    "jasmine-spec-reporter": "~4.2.1",
    "js-beautify": "^1.9.1",
    "karma": "^4.0.1",
    "karma-chrome-launcher": "~2.2.0",
    "karma-cli": "~2.0.0",
    "karma-coverage-istanbul-reporter": "^2.0.5",
    "karma-htmlfile-reporter": "^0.3.8",
    "karma-jasmine": "^2.0.1",
    "karma-jasmine-html-reporter": "^1.4.0",
    "npm-run-all": "^4.1.2",
    "prettier": "^1.16.4",
    "protractor": "^5.4.2",
    "ts-node": "~8.0.3",
    "tslint": "^5.12.0",
    "typescript": "^3.3.3333"
  },
  "importSort": {
    ".ts, .tsx": {
      "parser": "typescript",
      "style": "module",
      "options": {}
    }
  },
  "prettier": {
    "printWidth": 90,
    "semi": false,
    "singleQuote": true,
    "trailingComma": "es5",
    "parser": "typescript",
    "jsxBracketSameLine": true
  }
}
